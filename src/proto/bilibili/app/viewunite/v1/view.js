// @generated by protobuf-ts 2.9.4 with parameter output_javascript_es2019
// @generated from protobuf file "bilibili/app/viewunite/v1/view.proto" (package "bilibili.app.viewunite.v1", syntax proto3)
// tslint:disable
import { WireType } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf enum bilibili.app.viewunite.v1.TabType
 */
export var TabType;
(function (TabType) {
    /**
     * @generated from protobuf enum value: TAB_NONE = 0;
     */
    TabType[TabType["TAB_NONE"] = 0] = "TAB_NONE";
    /**
     * @generated from protobuf enum value: TAB_INTRODUCTION = 1;
     */
    TabType[TabType["TAB_INTRODUCTION"] = 1] = "TAB_INTRODUCTION";
})(TabType || (TabType = {}));
/**
 * @generated from protobuf enum bilibili.app.viewunite.v1.ModuleType
 */
export var ModuleType;
(function (ModuleType) {
    /**
     * @generated from protobuf enum value: UNKNOWN = 0;
     */
    ModuleType[ModuleType["UNKNOWN"] = 0] = "UNKNOWN";
    /**
     * @generated from protobuf enum value: UGC_HEADLINE = 3;
     */
    ModuleType[ModuleType["UGC_HEADLINE"] = 3] = "UGC_HEADLINE";
    /**
     * @generated from protobuf enum value: RELATED_RECOMMEND = 28;
     */
    ModuleType[ModuleType["RELATED_RECOMMEND"] = 28] = "RELATED_RECOMMEND";
    /**
     * @generated from protobuf enum value: PAY_BAR = 29;
     */
    ModuleType[ModuleType["PAY_BAR"] = 29] = "PAY_BAR";
    /**
     * @generated from protobuf enum value: SPECIALTAG = 37;
     */
    ModuleType[ModuleType["SPECIALTAG"] = 37] = "SPECIALTAG";
    /**
     * @generated from protobuf enum value: E55 = 55;
     */
    ModuleType[ModuleType["E55"] = 55] = "E55";
})(ModuleType || (ModuleType = {}));
/**
 * @generated from protobuf enum bilibili.app.viewunite.v1.RelateCardType
 */
export var RelateCardType;
(function (RelateCardType) {
    /**
     * @generated from protobuf enum value: CARD_TYPE_UNKNOWN = 0;
     */
    RelateCardType[RelateCardType["CARD_TYPE_UNKNOWN"] = 0] = "CARD_TYPE_UNKNOWN";
    /**
     * @generated from protobuf enum value: AV = 1;
     */
    RelateCardType[RelateCardType["AV"] = 1] = "AV";
    /**
     * @generated from protobuf enum value: GAME = 4;
     */
    RelateCardType[RelateCardType["GAME"] = 4] = "GAME";
    /**
     * @generated from protobuf enum value: CM_TYPE = 5;
     */
    RelateCardType[RelateCardType["CM_TYPE"] = 5] = "CM_TYPE";
    /**
     * @generated from protobuf enum value: LIVE = 6;
     */
    RelateCardType[RelateCardType["LIVE"] = 6] = "LIVE";
    /**
     * @generated from protobuf enum value: AI_RECOMMEND = 7;
     */
    RelateCardType[RelateCardType["AI_RECOMMEND"] = 7] = "AI_RECOMMEND";
    /**
     * @generated from protobuf enum value: COURSE = 11;
     */
    RelateCardType[RelateCardType["COURSE"] = 11] = "COURSE";
})(RelateCardType || (RelateCardType = {}));
// @generated message type with reflection information, may provide speed optimized methods
class ViewReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.v1.ViewReply", [
            { no: 3, name: "req_user", kind: "message", T: () => ReqUser },
            { no: 5, name: "tab", kind: "message", T: () => Tab },
            { no: 7, name: "cm", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.cm = new Uint8Array(0);
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.viewunite.v1.ReqUser req_user */ 3:
                    message.reqUser = ReqUser.internalBinaryRead(reader, reader.uint32(), options, message.reqUser);
                    break;
                case /* bilibili.app.viewunite.v1.Tab tab */ 5:
                    message.tab = Tab.internalBinaryRead(reader, reader.uint32(), options, message.tab);
                    break;
                case /* bytes cm */ 7:
                    message.cm = reader.bytes();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.viewunite.v1.ReqUser req_user = 3; */
        if (message.reqUser)
            ReqUser.internalBinaryWrite(message.reqUser, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.viewunite.v1.Tab tab = 5; */
        if (message.tab)
            Tab.internalBinaryWrite(message.tab, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bytes cm = 7; */
        if (message.cm.length)
            writer.tag(7, WireType.LengthDelimited).bytes(message.cm);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.v1.ViewReply
 */
export const ViewReply = new ViewReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReqUser$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.v1.ReqUser", [
            { no: 7, name: "elec_plus_btn", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.elecPlusBtn = new Uint8Array(0);
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bytes elec_plus_btn */ 7:
                    message.elecPlusBtn = reader.bytes();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bytes elec_plus_btn = 7; */
        if (message.elecPlusBtn.length)
            writer.tag(7, WireType.LengthDelimited).bytes(message.elecPlusBtn);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.v1.ReqUser
 */
export const ReqUser = new ReqUser$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Tab$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.v1.Tab", [
            { no: 1, name: "tab_module", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TabModule }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.tabModule = [];
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.viewunite.v1.TabModule tab_module */ 1:
                    message.tabModule.push(TabModule.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.viewunite.v1.TabModule tab_module = 1; */
        for (let i = 0; i < message.tabModule.length; i++)
            TabModule.internalBinaryWrite(message.tabModule[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.v1.Tab
 */
export const Tab = new Tab$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TabModule$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.v1.TabModule", [
            { no: 1, name: "tab_type", kind: "enum", T: () => ["bilibili.app.viewunite.v1.TabType", TabType] },
            { no: 2, name: "introduction", kind: "message", oneof: "tab", T: () => IntroductionTab }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.tabType = 0;
        message.tab = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.viewunite.v1.TabType tab_type */ 1:
                    message.tabType = reader.int32();
                    break;
                case /* bilibili.app.viewunite.v1.IntroductionTab introduction */ 2:
                    message.tab = {
                        oneofKind: "introduction",
                        introduction: IntroductionTab.internalBinaryRead(reader, reader.uint32(), options, message.tab.introduction)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.viewunite.v1.TabType tab_type = 1; */
        if (message.tabType !== 0)
            writer.tag(1, WireType.Varint).int32(message.tabType);
        /* bilibili.app.viewunite.v1.IntroductionTab introduction = 2; */
        if (message.tab.oneofKind === "introduction")
            IntroductionTab.internalBinaryWrite(message.tab.introduction, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.v1.TabModule
 */
export const TabModule = new TabModule$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IntroductionTab$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.v1.IntroductionTab", [
            { no: 2, name: "modules", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Module }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.modules = [];
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.viewunite.v1.Module modules */ 2:
                    message.modules.push(Module.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.viewunite.v1.Module modules = 2; */
        for (let i = 0; i < message.modules.length; i++)
            Module.internalBinaryWrite(message.modules[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.v1.IntroductionTab
 */
export const IntroductionTab = new IntroductionTab$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Module$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.v1.Module", [
            { no: 1, name: "type", kind: "enum", T: () => ["bilibili.app.viewunite.v1.ModuleType", ModuleType] },
            { no: 5, name: "head_line", kind: "message", oneof: "data", T: () => Headline },
            { no: 22, name: "relates", kind: "message", oneof: "data", T: () => Relates }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.type = 0;
        message.data = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.viewunite.v1.ModuleType type */ 1:
                    message.type = reader.int32();
                    break;
                case /* bilibili.app.viewunite.v1.Headline head_line */ 5:
                    message.data = {
                        oneofKind: "headLine",
                        headLine: Headline.internalBinaryRead(reader, reader.uint32(), options, message.data.headLine)
                    };
                    break;
                case /* bilibili.app.viewunite.v1.Relates relates */ 22:
                    message.data = {
                        oneofKind: "relates",
                        relates: Relates.internalBinaryRead(reader, reader.uint32(), options, message.data.relates)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.viewunite.v1.ModuleType type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* bilibili.app.viewunite.v1.Headline head_line = 5; */
        if (message.data.oneofKind === "headLine")
            Headline.internalBinaryWrite(message.data.headLine, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.viewunite.v1.Relates relates = 22; */
        if (message.data.oneofKind === "relates")
            Relates.internalBinaryWrite(message.data.relates, writer.tag(22, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.v1.Module
 */
export const Module = new Module$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Headline$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.v1.Headline", [
            { no: 1, name: "label", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.label = new Uint8Array(0);
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bytes label */ 1:
                    message.label = reader.bytes();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bytes label = 1; */
        if (message.label.length)
            writer.tag(1, WireType.LengthDelimited).bytes(message.label);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.v1.Headline
 */
export const Headline = new Headline$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Relates$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.v1.Relates", [
            { no: 1, name: "cards", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => RelateCard }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.cards = [];
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.viewunite.v1.RelateCard cards */ 1:
                    message.cards.push(RelateCard.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.viewunite.v1.RelateCard cards = 1; */
        for (let i = 0; i < message.cards.length; i++)
            RelateCard.internalBinaryWrite(message.cards[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.v1.Relates
 */
export const Relates = new Relates$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RelateCard$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.v1.RelateCard", [
            { no: 1, name: "relate_card_type", kind: "enum", T: () => ["bilibili.app.viewunite.v1.RelateCardType", RelateCardType] },
            { no: 11, name: "cm_stock", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 12, name: "basic_info", kind: "message", T: () => CardBasicInfo }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.relateCardType = 0;
        message.cmStock = new Uint8Array(0);
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.viewunite.v1.RelateCardType relate_card_type */ 1:
                    message.relateCardType = reader.int32();
                    break;
                case /* bytes cm_stock */ 11:
                    message.cmStock = reader.bytes();
                    break;
                case /* bilibili.app.viewunite.v1.CardBasicInfo basic_info */ 12:
                    message.basicInfo = CardBasicInfo.internalBinaryRead(reader, reader.uint32(), options, message.basicInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.viewunite.v1.RelateCardType relate_card_type = 1; */
        if (message.relateCardType !== 0)
            writer.tag(1, WireType.Varint).int32(message.relateCardType);
        /* bytes cm_stock = 11; */
        if (message.cmStock.length)
            writer.tag(11, WireType.LengthDelimited).bytes(message.cmStock);
        /* bilibili.app.viewunite.v1.CardBasicInfo basic_info = 12; */
        if (message.basicInfo)
            CardBasicInfo.internalBinaryWrite(message.basicInfo, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.v1.RelateCard
 */
export const RelateCard = new RelateCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CardBasicInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.v1.CardBasicInfo", [
            { no: 6, name: "unique_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.uniqueId = "";
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string unique_id */ 6:
                    message.uniqueId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string unique_id = 6; */
        if (message.uniqueId !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.uniqueId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.v1.CardBasicInfo
 */
export const CardBasicInfo = new CardBasicInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ViewProgressReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.v1.ViewProgressReply", [
            { no: 4, name: "dm", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.dm = new Uint8Array(0);
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bytes dm */ 4:
                    message.dm = reader.bytes();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bytes dm = 4; */
        if (message.dm.length)
            writer.tag(4, WireType.LengthDelimited).bytes(message.dm);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.v1.ViewProgressReply
 */
export const ViewProgressReply = new ViewProgressReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RelatesFeedReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.v1.RelatesFeedReply", [
            { no: 1, name: "relates", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => RelateCard }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.relates = [];
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.viewunite.v1.RelateCard relates */ 1:
                    message.relates.push(RelateCard.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.viewunite.v1.RelateCard relates = 1; */
        for (let i = 0; i < message.relates.length; i++)
            RelateCard.internalBinaryWrite(message.relates[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.v1.RelatesFeedReply
 */
export const RelatesFeedReply = new RelatesFeedReply$Type();

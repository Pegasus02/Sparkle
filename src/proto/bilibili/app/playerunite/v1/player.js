// @generated by protobuf-ts 2.9.4 with parameter output_javascript_es2019
// @generated from protobuf file "bilibili/app/playerunite/v1/player.proto" (package "bilibili.app.playerunite.v1", syntax proto3)
// tslint:disable
import { WireType } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ViewInfo } from "../../../playershared/playershared";
import { PlayArcConf } from "../../../playershared/playershared";
// @generated message type with reflection information, may provide speed optimized methods
class PlayViewUniteReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.playerunite.v1.PlayViewUniteReply", [
            { no: 2, name: "play_arc_conf", kind: "message", T: () => PlayArcConf },
            { no: 9, name: "view_info", kind: "message", T: () => ViewInfo }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.playershared.PlayArcConf play_arc_conf */ 2:
                    message.playArcConf = PlayArcConf.internalBinaryRead(reader, reader.uint32(), options, message.playArcConf);
                    break;
                case /* bilibili.playershared.ViewInfo view_info */ 9:
                    message.viewInfo = ViewInfo.internalBinaryRead(reader, reader.uint32(), options, message.viewInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.playershared.PlayArcConf play_arc_conf = 2; */
        if (message.playArcConf)
            PlayArcConf.internalBinaryWrite(message.playArcConf, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.playershared.ViewInfo view_info = 9; */
        if (message.viewInfo)
            ViewInfo.internalBinaryWrite(message.viewInfo, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.playerunite.v1.PlayViewUniteReply
 */
export const PlayViewUniteReply = new PlayViewUniteReply$Type();
